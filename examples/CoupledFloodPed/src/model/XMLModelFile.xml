<?xml version="1.0" encoding="utf-8"?>
<gpu:xmodel xmlns:gpu="http://www.dcs.shef.ac.uk/~paul/XMMLGPU"
        xmlns="http://www.dcs.shef.ac.uk/~paul/XMML">
    <name>flood</name>
    <gpu:environment>
      <!--Constant variables of the model-->
        <gpu:constants>
          <!--flood model constant variables-->
          <gpu:variable>
                <type>double</type>
                <name>xmin</name>
            </gpu:variable>
            <gpu:variable>
                <type>double</type>
                <name>xmax</name>
            </gpu:variable>
                    <gpu:variable>
                <type>double</type>
                <name>ymin</name>
            </gpu:variable>
            <gpu:variable>
                <type>double</type>
                <name>ymax</name>
            </gpu:variable>
            <gpu:variable>
                <type>double</type>
                <name>dt</name>
            </gpu:variable>
            <gpu:variable>
                <type>double</type>
                <name>DXL</name>
            </gpu:variable>
            <gpu:variable>
                <type>double</type>
                <name>DYL</name>
            </gpu:variable>
          
          <!--Pedestrian model constant variables-->
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT1</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT2</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT3</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT4</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT5</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT6</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>EMMISION_RATE_EXIT7</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT1_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT2_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT3_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT4_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT5_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT6_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT7_PROBABILITY</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT1_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT2_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT3_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT4_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT5_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT6_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT7_STATE</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT1_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT2_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT3_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT4_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT5_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT6_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>EXIT7_CELL_COUNT</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>TIME_SCALER</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>STEER_WEIGHT</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>AVOID_WEIGHT</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>COLLISION_WEIGHT</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>GOAL_WEIGHT</name>
          </gpu:variable>
        </gpu:constants>
      
        <!--Shared source code -->
        <gpu:functionFiles>
            <file>functions.c</file>
        </gpu:functionFiles>
      
      <!--Init function for initialising dx , dy, dt-->
          <gpu:initFunctions>
            <gpu:initFunction>
               <gpu:name>initConstants</gpu:name>
           </gpu:initFunction>
          </gpu:initFunctions>
        
    <gpu:stepFunctions>
      <gpu:stepFunction>
        <gpu:name>DELTA_T_func</gpu:name>
      </gpu:stepFunction>
    </gpu:stepFunctions>
    
  </gpu:environment>
    <xagents>
      <!--Flood agent-->
        <gpu:xagent>
            <name>FloodCell</name>
            <memory>
                <gpu:variable>
                    <type>int</type>
                    <name>inDomain</name>
                </gpu:variable>
                <gpu:variable>
                    <type>int</type>
                    <!-- the type 'int' changed to 'int' MS01Sep2017-->
                    <name>x</name>
                </gpu:variable>
                <gpu:variable>
                    <type>int</type>
                    <name>y</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>z0</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>h</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qx</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qy</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>timeStep</name>
                    <!--This is to assign dynamic adaptive 'dt' with respect to CFL and velocities -  MS01Sep2017-->
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>minh_loc</name>
                    <!--This is to assign dynamic 'hmin' with respect to LFVs - MS01Sep2017-->
                </gpu:variable>
                <gpu:variable>
                    <!-- EAST LFV-->
                    <type>double</type>
                    <name>hFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qxFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qyFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <!-- WEST LFV-->
                    <type>double</type>
                    <name>hFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qxFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qyFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <!-- NORTH LFV-->
                    <type>double</type>
                    <name>hFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qxFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qyFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <!-- SOUTH LFV-->
                    <type>double</type>
                    <name>hFace_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qxFace_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qyFace_S</name>
                </gpu:variable>
            </memory>
            <functions>
                <gpu:function>
                    <name>PrepareWetDry</name>
                    <currentState>Default</currentState>
                    <nextState>Default</nextState>
                    <outputs>
                        <gpu:output>
                            <messageName>WetDryMessage</messageName>
                            <gpu:type>single_message</gpu:type>
                        </gpu:output>
                    </outputs>
                    <gpu:reallocate>false</gpu:reallocate>
                    <gpu:RNG>false</gpu:RNG>
                </gpu:function>
                <gpu:function>
                    <name>ProcessWetDryMessage</name>
                    <currentState>Default</currentState>
                    <nextState>Default</nextState>
                    <inputs>
                        <gpu:input>
                            <messageName>WetDryMessage</messageName>
                        </gpu:input>
                    </inputs>
                    <gpu:reallocate>false</gpu:reallocate>
                    <gpu:RNG>false</gpu:RNG>
                </gpu:function>

              <gpu:function>
                <name>PrepareSpaceOperator</name>
                <currentState>Default</currentState>
                <nextState>Default</nextState>
                <outputs>
                  <gpu:output>
                    <messageName>SpaceOperatorMessage</messageName>
                    <gpu:type>single_message</gpu:type>
                  </gpu:output>
                </outputs>
                <gpu:reallocate>false</gpu:reallocate>
                <gpu:RNG>false</gpu:RNG>
              </gpu:function>
              <gpu:function>
                <name>ProcessSpaceOperatorMessage</name>
                <currentState>Default</currentState>
                <nextState>Default</nextState>
                <inputs>
                  <gpu:input>
                    <messageName>SpaceOperatorMessage</messageName>
                  </gpu:input>
                </inputs>
                <gpu:reallocate>false</gpu:reallocate>
                <gpu:RNG>false</gpu:RNG>
              </gpu:function>
            </functions>
            <states>
                <gpu:state>
                    <name>Default</name>
                </gpu:state>
                <initialState>Default</initialState>
            </states>
            <gpu:type>discrete</gpu:type>
            <gpu:bufferSize>4096</gpu:bufferSize>
        </gpu:xagent>
      
      <!--Pedestrian agent-->
        <gpu:xagent>
      <name>agent</name>
      <memory>
        <gpu:variable>
          <type>float</type>
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>velx</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>vely</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>steer_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>steer_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>height</name>
        </gpu:variable>
        <gpu:variable>
          <type>int</type>
          <name>exit_no</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>speed</name>
        </gpu:variable>
        <!-- rendering and animation variables-->
        <gpu:variable>
          <type>int</type>
          <name>lod</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>animate</name>
        </gpu:variable>
        <gpu:variable>
          <type>int</type>
          <name>animate_dir</name>
        </gpu:variable>
      </memory>
      <functions>
        <gpu:function>
          <name>output_pedestrian_location</name>
          <currentState>default</currentState>
          <nextState>default</nextState>
          <outputs>
            <gpu:output>
              <messageName>pedestrian_location</messageName>
              <gpu:type>single_message</gpu:type>
            </gpu:output>
          </outputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>
        <gpu:function>
          <name>avoid_pedestrians</name>
          <currentState>default</currentState>
          <nextState>default</nextState>
          <inputs>
            <gpu:input>
              <messageName>pedestrian_location</messageName>
            </gpu:input>
          </inputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>true</gpu:RNG>
        </gpu:function>
        <gpu:function>
          <name>force_flow</name>
          <currentState>default</currentState>
          <nextState>default</nextState>
          <inputs>
            <gpu:input>
              <messageName>navmap_cell</messageName>
            </gpu:input>
          </inputs>
          <gpu:reallocate>true</gpu:reallocate>
          <gpu:RNG>true</gpu:RNG>
        </gpu:function>
        <gpu:function>
          <name>move</name>
          <currentState>default</currentState>
          <nextState>default</nextState>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>
      </functions>
      <states>
        <gpu:state>
          <name>default</name>
        </gpu:state>
        <initialState>default</initialState>
      </states>
      <gpu:type>continuous</gpu:type>
      <gpu:bufferSize>4096</gpu:bufferSize>
    </gpu:xagent>
      
       <!--Navigation agent-->
        <gpu:xagent>
      <name>navmap</name>
      <memory>
        <gpu:variable>
          <type>int</type>
          <name>x</name>
        </gpu:variable>
        <gpu:variable>
          <type>int</type>
          <name>y</name>
        </gpu:variable>
        <gpu:variable>
          <type>int</type>
          <name>exit_no</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>height</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>collision_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>collision_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit0_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit0_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit1_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit1_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit2_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit2_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit3_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit3_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit4_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit4_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit5_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit5_y</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit6_x</name>
        </gpu:variable>
        <gpu:variable>
          <type>float</type>
          <name>exit6_y</name>
        </gpu:variable>
      </memory>
      <functions>
        <gpu:function>
          <name>output_navmap_cells</name>
          <currentState>static</currentState>
          <nextState>static</nextState>
          <outputs>
            <gpu:output>
              <messageName>navmap_cell</messageName>
              <gpu:type>single_message</gpu:type>
            </gpu:output>
          </outputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>false</gpu:RNG>
        </gpu:function>
        <gpu:function>
          <name>generate_pedestrians</name>
          <currentState>static</currentState>
          <nextState>static</nextState>
          <xagentOutputs>
            <gpu:xagentOutput>
              <xagentName>agent</xagentName>
              <state>default</state>
            </gpu:xagentOutput>
          </xagentOutputs>
          <gpu:reallocate>false</gpu:reallocate>
          <gpu:RNG>true</gpu:RNG>
        </gpu:function>
      </functions>
      <states>
        <gpu:state>
          <name>static</name>
        </gpu:state>
        <initialState>static</initialState>
      </states>
      <gpu:type>discrete</gpu:type>
      <gpu:bufferSize>4096</gpu:bufferSize>
    </gpu:xagent>
  </xagents>
  
    <messages>
      <!--Flood model message 1 : friction contribution-->
        <gpu:message>
        <name>WetDryMessage</name>
        <variables>
          <gpu:variable>
            <type>int</type>
            <name>inDomain</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>x</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>y</name>
          </gpu:variable>
          <gpu:variable>
            <type>double</type>
            <name>min_hloc</name>
          </gpu:variable>
        </variables>
        <gpu:partitioningDiscrete>
          <gpu:radius>1</gpu:radius>
        </gpu:partitioningDiscrete>
        <gpu:bufferSize>4096</gpu:bufferSize>
      </gpu:message>
      <!--Flood model message 2 : SWE solver-->
        <gpu:message>
            <name>SpaceOperatorMessage</name>
            <variables>
                <gpu:variable>
                    <type>int</type>
                    <name>inDomain</name>
                </gpu:variable>
                <gpu:variable>
                    <type>int</type>
                    <name>x</name>
                </gpu:variable>
                <gpu:variable>
                    <type>int</type>
                    <name>y</name>
                </gpu:variable>
              <!--<gpu:variable>
                 <type>double</type>
                   <name>z0</name>
                 </gpu:variable>
              <gpu:variable>
             <type>double</type>
            <name>h</name>
          </gpu:variable>
          <gpu:variable>
            <type>double</type>
            <name>qx</name>
          </gpu:variable>
          <gpu:variable>
            <type>double</type>
            <name>qy</name>
          </gpu:variable>-->
                <gpu:variable>
                    <!--EAST-->
                    <type>double</type>
                    <name>hFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_X_E</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_Y_E</name>
                </gpu:variable>
                <gpu:variable>
                    <!--WEST-->
                    <type>double</type>
                    <name>hFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_X_W</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_Y_W</name>
                </gpu:variable>
                <gpu:variable>
                    <!--NORTH-->
                    <type>double</type>
                    <name>hFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_X_N</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_Y_N</name>
                </gpu:variable>
                <gpu:variable>
                    <!--SOUTH-->
                    <type>double</type>
                    <name>hFace_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>etFace_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_X_S</name>
                </gpu:variable>
                <gpu:variable>
                    <type>double</type>
                    <name>qFace_Y_S</name>
                </gpu:variable>
            </variables>
            <gpu:partitioningDiscrete>
                <gpu:radius>1</gpu:radius>
            </gpu:partitioningDiscrete>
            <gpu:bufferSize>4096</gpu:bufferSize>
        </gpu:message>
      
      <!--Pedestrian model message 1 : Sharing location between pedestrians-->
      <gpu:message>
        <name>pedestrian_location</name>
        <variables>
          <gpu:variable>
            <type>float</type>
            <name>x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>z</name>
          </gpu:variable>
        </variables>
        <gpu:partitioningSpatial>
          <gpu:radius>0.025</gpu:radius>
          <gpu:xmin>-1.0</gpu:xmin>
          <gpu:xmax>1.0</gpu:xmax>
          <gpu:ymin>-1.0</gpu:ymin>
          <gpu:ymax>1.0</gpu:ymax>
          <gpu:zmin>0.0</gpu:zmin>
          <gpu:zmax>0.025</gpu:zmax>
        </gpu:partitioningSpatial>
        <gpu:bufferSize>4096</gpu:bufferSize>
      </gpu:message>

      <!--Pedestrian model message 2 : Navigation data and force calculations-->
      <gpu:message>
        <name>navmap_cell</name>
        <variables>
          <gpu:variable>
            <type>int</type>
            <name>x</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>y</name>
          </gpu:variable>
          <gpu:variable>
            <type>int</type>
            <name>exit_no</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>height</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>collision_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>collision_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit0_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit0_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit1_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit1_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit2_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit2_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit3_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit3_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit4_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit4_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit5_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit5_y</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit6_x</name>
          </gpu:variable>
          <gpu:variable>
            <type>float</type>
            <name>exit6_y</name>
          </gpu:variable>
        </variables>
        <gpu:partitioningDiscrete>
          <gpu:radius>0</gpu:radius>
        </gpu:partitioningDiscrete>
        <gpu:bufferSize>4096</gpu:bufferSize>
      </gpu:message>
        
       
    </messages>
    <layers>
        <layer> <!--LAYER 1-->
            <gpu:layerFunction>
                <name>PrepareWetDry</name>
            </gpu:layerFunction>
            <gpu:layerFunction>
                <name>generate_pedestrians</name>
            </gpu:layerFunction>
        </layer>
      
        <layer> <!--LAYER 2-->
            <gpu:layerFunction>
                <name>ProcessWetDryMessage</name>
            </gpu:layerFunction>
            <gpu:layerFunction>
                <name>output_pedestrian_location</name>
          </gpu:layerFunction>
          <gpu:layerFunction>
               <name>output_navmap_cells</name>
          </gpu:layerFunction>
        </layer>
      
        <layer><!--LAYER 3-->
            <gpu:layerFunction>
                <name>PrepareSpaceOperator</name>
            </gpu:layerFunction>
            <gpu:layerFunction>
                <name>avoid_pedestrians</name>
            </gpu:layerFunction>
        </layer>
      
        <layer><!--LAYER 4-->
            <gpu:layerFunction>
                <name>ProcessSpaceOperatorMessage</name>
            </gpu:layerFunction>
            <gpu:layerFunction>
                <name>force_flow</name>
            </gpu:layerFunction>
        </layer>
      
        <layer> <!--LAYER 5-->
            <gpu:layerFunction>
              <name>move</name>
            </gpu:layerFunction>
         </layer>

    </layers>
</gpu:xmodel>
